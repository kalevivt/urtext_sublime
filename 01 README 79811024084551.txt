SublimeUrtext Documentation 

Updated: <Mon., Mar. 04, 2019, 05:32 PM>
Version: 0.4

{{ 	What This Is : 

		{{ Urtext is a syntax for writing, structuring, and reading files in plaintext that can be used on any platform.
		
																																													 /- ID:79810915120430; 
																																													 tag:definition-/ }}

		* Sublime is a modern, programmable text editor. 

		This is an implementation of Urtext in Sublime Text. I call it Sublime-Urtext. 

		This is Urtext inside of Sublime.																											 /- ID:79810915120529 -/  }}

How to set it up : 
----------------

	- You'll need an empty Sublime Project. Create one by opening a new empty folder (File -> Open) and then save it as a project (Project -> Save Project As ...).

	- You are prompted to save a file with a .sublime-project extension. Name it anything, save it anywhere you like. For simplicity, you could save it inside the empty folder you just created.

	- Open up the .sublime-project file you just saved in Sublime and edit it. Add one line inside the outermost squiggly brackets:
		
		"urtext_path" : "<path to your new project folder>",

	Your .sublime-project file might look like this:

			{
			    "folders":
			    [
			        {
			            "path": "/Users/YourName/Documents/new project",
			        },
			    ],
			    "urtext_path" : "/Users/YourName/Documents/new_project",
			    "settings":
			    {
			        "tab_size": 2
			    },
			    
			}

	The "urtext_path" is where the Urtext plugin will look for all your Urtext files, no matter your current working directory. This is necessary because Sublime Text frequently changes the working directory without explicitly letting you know. Because Urtext only utilizes one folder, this ensures everything in the Urtext project is saved and retrieved from the same folder.

	Whenever you want to use your project, just select Project -> Quick Switch Project (Ctrl-Cmd-P), select your Urtext project, and you'll be using the project.

Getting Started:
---------------

	Text content is kept in nodes. Think of a node as a blank piece of paper. Nodes can be any length. To create a new node press Control-Shift-; (Control-Shift-semicolon). You don't have to make a filename or interact with a file system dialog. Urtext does that.

	Every new node has whitespace on top and a metadata block at the bottom. Metadata initially includes the creation date and the filename. By default, the first non-whitespace line is read as a node title. Write a title and anything else into the node. Save it with Command-S. Create another file the same way. Write something in it. Save it.

	Now you have multiple nodes. To browse your nodes, press Command-E (Mac) or select "Urtext: Show All Nodes" from the Sublime command palette (Shift-Command-P). By default, nodes are sorted by their creation datestamp, with the most recent first. They can also be sorted by index (see below). Find a node by typing part of its title. Open a node by selecting it and pressing enter.

Linking Nodes:
--------------
	
	The way to build elaborate writing systems is to link nodes together. Wherever the dash-arrow sign (->) appears in an Urtext node, Urtext will look for a node-ID immediately or shortly afterward. This is treated as a link. Press Shift-Ctrl-/ on a line containing a link to open the linked node. 

	Note that linking does not require a full filename, only a 14-digit Node ID (created automatically when a new node is made). Any other information around the Node ID (such as the rest of the filename, or arbitrary text), will be ignored. This works because all Node IDs are unique. See below for more information on file naming and Node IDs.

	Two Command Pallette commands can make linking quick and easy:

	Urtext : Link To ...
		Links from the currently viewed node to another node which you can select in the selection panel. When you select a node in the quick panel, a link to that node will be inserted at the cursor.

	Urtext: Link From ...
		Links TO the current node FROM another node. When you select this command, a link to the current node will be copied to the clipboard. You can then paste the reference into the node you open in the quick panel. 

Seeing Node Relationships:
--------------------------

	When two or more nodes are interlinked, you can view a tree of all nodes that link into and out of a given node, to any depth. Start by viewing any node either containing a link or having another node containing a link to itself. Select "Urtext: Show Node Relationships ... " from the Command Palette.

File Organization:
------------------
	
	Currently Urtext utilizes no file tree. All nodes are kept in a single folder. There are two reasons for this:

		- It makes a single project easy to sync and use across multiple file systems where file and folder paths may not always resolve uniformly.

		- It purposefully avoids the need to interact directly with the file system to sort, organize and find files. Use nodeviews instead. (See below).

	The exception is non-plaintext (non-node) files. If you reference (link) image, media, PDF or other types of files from an Urtext project, it is suggested to utilize subfolders of the project folder such as /img, /pdf, etc., with files of like type in the same folder.

Nodeviews:
----------

	Instead of a file tree, Urtext uses nodeviews. A nodeview is a structured list or diagram of many nodes, itself written in plain text. It works like a virtual file tree.

	To make a nodeview, just write several node links into a single node, with or without additional text or formatting. You can structure it however you want: as a list, outline, tab-delimited nesting, in prose, etc.

	Once you have a node view, you can navigate it like a file tree by turning on Traverse mode (Ctrl-R). Traverse mode will open a second pane view. As you navigate the nodeview in the left pane with the cursor or mouse, the selected node shows on the right pane. Use Sublime's Focus Group navigation keys, or the mouse, to switch between left and right panes.

	The status bar at the bottom of the Sublime window will indicate whether Traverse is on or off. Note that if Traverse mode is off, you can also open a link manually (Shift-Ctrl-/) as normal.

Metadata:
---------

	At the bottom of every node is a separator of twelve consecutive dashes on a single line. Everything below this separator is metadata. Other than two reserved words (see below), metadata can be have aribitrary names and values, with open-ended length and uses. Names and values of any tags appearing in the metadata block will be indexed automatically.

	Write each metadata entry on its own line, in the format:
		
		<optional name> : <optional value with optional timestamp> 

	For example:

			Purpose : work-related <Tue., Mar. 05, 2019, 03:25 PM>
	Or:

			kind: gift list

	Note that: 

		- a colon separates the metadata name from the value 

		- All three values are optional. Every non-blank line below the metadata separator will be read as a metadata entry. If you entry no name, that 		entry's value will have no name; if you enter no value, the name will have no value, etc.

		- A timestamp anywhere in the value will be indexed as the timestamp for the metadata entry. If you put more than one timestamp in an entry, only the first one is read.
		
		- Indexing of metadata names is not case-sensitive.

	There are two reserved metadata names:

		title:

			If for some reason you want to override the automatic title and assign a title manually, add a title tag to the metadata block:

			title: < Title Of Node >

		index:

			You can optionally add a two-digit sort index (00-99) to a node, such as:

			index: 03

			Index tags will sort the files in the node browser (Command-E). Any indexed nodes will before (above) the others, with lowest number appearing first. Remember unindexed notes display in order of creation, newest first. You can give the same index number to multiple nodes; in this case they sort with the most recent node first, within each index.

			See Filenames for another way to use for indexes.
	
Finding nodes via Metadata:
---------------------------

	To navigate to nodes using their metadata, use the "Find By Meta" command in Command Palette. Select the tag name and then "<all>" or a tag value. A nodeview matching the selection will be written into a new buffer.

Timeline View:
--------------

	Another way to view all your nodes is timelime view. Press Ctrl-Shift-T or select Urtext: Show Timeline in the Sublime command palette. This shows all your nodes in a timeline, starting with the most recent. To open an node from the timeline, place the cursor anywhere on the line containing the link and press Ctrl-U. 


Timestamps:
-----------
	
	Timestamps: Urtext utilizes human-readable Timestamps in the format: <Thu., Feb. 07, 2019, 05:57 PM>. In Sublime, insert one anywhere by pressing Command-T. Timestamps can be written inline or as elements of metadata (see below). Urtext parses timestamps throughout the project, not only in the metadata block.


Filenames:
----------

	Other than the 14-digit node ID created by Urtext, file names are arbitrary. You can use any naming convention you want to make filenames easy for purposes such as browsing files via the file system, reading and editing nodes using mobile apps, etc. The 14-digit node ID must appear someplace in the filename.

	Urtext can rename files automatically from their title and/or index. Renaming by index is useful if you want to see nodes appear in a file system, mobile app, or other app's file browser in the same order as they appear within Sublime Urtext. Renaming by title is useful if you want to simulate Urtext's automatic title feature. Note that files renamed using this feature still contain the Node ID, since Urtext requires it.

	To rename a file, select "Rename File from Meta" from the command palette (Command-P). This will rename the file in one of the following schema:

	If an index is present:

		<index> <title> <node id>.txt

	If no index is present:

		<node id> <title>.txt

	This system preserves automatic numerical sorting within the filesystem, such that the most recent un-indexed nodes appear first. If you want to use another system, such as putting the title first, you can do so. Any naming system will work as long as the node ID is somewhere in the filename.

Node IDs:
---------

	Nodes have 14-digit ID numbers. The 14 digits are an inverse representation of the year, month, day, hour, minute and second they were created. The operating system's file-created or file-modified metadata is avoided because it can be too easily and involuntarily overwritten under ordinary file system operations such as copying and moving files or folders. Creation date is inverted in filenames to force files sorting with the most recent node first. It's useful in mobile applications that have limited or inconvenient filelist sorting and viewing capabilities. 
	
Linking to URLS and to Files Outside the Project:
------------------------------------

	Ctrl-U works to open a link anywhere in an Urtext project. The syntax for making a link is:

		<any text> -> <link to anything> | <any other text>

	Command palette. HTTP (internet) URLs are recognized and open in the default browser, such as -> www.google.com  | You can link to assets (img, pdf, etc.) within the Urtext project using the native folder separators for your operating system. 

Reserved Symbols and Syntax
---------------------------

		Any text between the arrow (->) and the pipe (|) is read as a link.

Syntax Highlighting
-------------------

		Sublime Urtext extends the Sixteen color scheme in Sublime. It also has a syntax definition file that can be used to add syntax highlighting in other color schemes.

Ideas Behind Urtext :
---------------------

		Urtext is a system and a syntax, not an implementation. Urtext is a loose syntax for writing and structuring files in plaintext that can be read by any platform.

		Urtext could be implemented using any another text editor with built-in or supplemental scripting/automation, a web application, or pencil and paper along with human sorting and organizing routines. One of the design principles is that each feature should have a pencil and paper analogue.

		Characteristics:
		-------------

		All in plain text. No proprietary file format or structure.
		Allow freeform text, without the need to adapt text to an existing system.
		Be undistracted by manually naming, saving, and renaming of files.
		Permit customizable metadata.
		Content must be readable, creatable, and at least partially editable and organizible from a mobile text editing app.
		Be capable of hyperlinks, both within and without the files. Files should be able to connect to one another.
		Version control
		Syntax highlighting
		Fuzzy search
		Allow both organized and disorganized use.
		Must be backward compatible with older systems

		Use of file system:
			Never have to interact directly with a file system dialog from within the Urtext project.
			Every node in a single folder, subfolders organization scheme.
			Files of other types are in subfolders labeled by type: /img, /pdf, etc.

		Every feature has a pencil and paper analogue.
		Looesly structured but flexible format that can be transferred among platforms, devices and applications. 
		Content remains in plain text. No reliance on proprietary applications, formats, platforms.
		Extensible, customizable.
		A system, not an implementation.
		Allows for metadata without relying on the filesystem

------------
Created <Thu., Feb. 07, 2019, 03:14 PM>
Original filename: 79811024084551.txt
tags: urtext
title: Urtext Documentation
Updated: <Tue., Mar. 05, 2019, 03:37 PM>