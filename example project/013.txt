
What Sublime-Urtext Is                                                                    
   
    {{ 
    Urtext is a syntax I invented for writing and organizing in plaintext.      /--ID:004; tag:definition--/}}

    Sublime is a modern, programmable text editor. 

    This is an implementation of Urtext in Sublime Text 3. I call it Sublime-Urtext. 

    {{  Ideas and Requirements Behind Urtext

    There are many tools available for writing and organizing. None of them was what I wanted, so I wrote this.

    The Urtext idea could be implemented using any text editor with built-in or supplemental scripting/automation, a web application, or pencil and paper along with human sorting and organizing routines. This example version uses a Python implementation of Urtext as a module, embedded into the Python scripting capability of Sublime Text 3 as a Sublime package. 

    {{  Basic Requirements:

        The original requirements were stringent enough to eliminate every tool already available:

            - All in plain text. No proprietary file formats or structure. 

            - Usable across multiple platforms and devices.

            - Allow both organized and disorganized use. Structured but flexible, all-purpose syntax that allows freeform writing without adapting to a preexisting interface or feature set. Permit gradual aggregation of content with other content.

            - Be undistracted by interacting with the file system (dialogues for naming, saving, organizing of files), unless desired.

            - Customizable and extensible metadata without relying on the file system.

            - Content must be at least partially editable and organizable from mobile devices.

            - Capable of hyperlinks, both within/among the files and to outside resources. Function as an all-purpose reference system that can link to anything.         

            - Pieces of content should be able to connect to one another in a tree-like as well as non-hierarchical fashion, such as wiki or flat database style. Files must be able to able to have multiple, not just single, tree-like or other relationships.

            - Extensible and customizable. This year's needs might not be next year's.

            - Does not require years to master. (Looking at you Org Mode.)

            - Future-proof. No reliance on anything that may not exist in 5 or 100 years.    /--ID:005--/}}

    {{  Additional Features:

            In addition to the requirements above, I wanted the following features found in various other text-oriented tools:

            - Basic syntax highlighting to delineate content from structure/syntax.

            - Fuzzy search within files. This is already implemented in most modern desktop editors and some mobile text editors, but I wanted the tool to have its own version of this that didn't rely on the editor features or environment.

            - Version control (using Git, for example). This possiblity is implicit in the commitment to plaintext but important enough to mention.
                                                                                               /--ID:006--/}}

    {{  Characteristics

        As a result of the above, Urtext came out having the following characteristics:
       
            - It has two components:

                - Static plaintext files in a loosely specified syntax.
                - A service that organizes, and compiles the files. This can run either manually or continuously in "watchdog" mode. (The latter was inspired by the ``npm run watch`` tool for React development.) In Sublime-Urtext, it is always in watchdog mode.
          
            - This particular implementation uses Python, embedded into a Sublime plugin to provide more Sublime-specific editing tools, also using Python, Sublime's scripting language. Like any data format (such as JSON, XML, etc.), the compiling could be done in any language, given the right rules. 

            - No need to interact directly with a file system dialog or manually organize files. 

            - No subfolder organization scheme. All files are kept in a single folder. Organization of files, file groups, and file relationships is entirely done within the system. This makes it easy to sync and use across devices and platforms where file and folder paths may not always resolve uniformly, and it avoids broken file paths from moved/renamed/reorganized files.

            - Filenaming is arbitrary but can be automated. 
                                                                                  /-- ID:007 --/ }}
                                                                                             /--ID:008--/}} 
                                                                                                    

/-- ID:013
Timestamp:<Wed., Jun. 05, 2019, 10:01 PM>
tags: 
 --/