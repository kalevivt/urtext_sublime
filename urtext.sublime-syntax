%YAML 1.2
---
# See http://www.sublimetext.com/docs/3/syntax.html
file_extensions:
  - txt
scope: urtext

contexts:
  # The prototype context is prepended to all contexts but those setting
  # meta_include_prototype: false.
  prototype:
    - include: comments

  main:
    # The main context is the initial starting point of our syntax.
    # Include other contexts from here (or specify them directly).
    - include: sheadings
    - include: bookmark
    - include: title
    #- include: dates
    - include: tags
    - include: meta-block
    - include: datestamp
    - include: comment-block


  meta-block:
    - include: tags
    - match: '^------------$'
      scope: meta-separator.urtext
      push:
        - meta_scope: meta-block.urtext
        - match: \-\/
          scope: meta-separator-end.urtext
          pop: true

  title:
    - match: '^(Ã€|#|@|\|@|\|#)\s*[A-Za-z_0-9\*].*\b'
      scope: markup.heading

  datestamp:
    - match: '<(Sat|Sun|Mon|Tue|Wed|Thu|Fri).*(AM|PM)>'
      scope: urtext.datestamp
  tags:
    - match: '\b^(bookmark)\s*[A-Za-z_\s]*\b'
      scope: markup.heading


  sheadings:
    # Keywords are if, else for and while.
    # Note that blackslashes don't need to be escaped within single quoted
    # strings in YAML. When using single quoted strings, only single quotes
    # need to be escaped: this is done by using two single quotes next to each
    # other.
    - match: '\b^(idea|project|shit|clairequote)\s*[A-Za-z_\s]*\b'
      scope: urtext.heading
    #- meta_scope: text.nate

  inside_string:
    - meta_include_prototype: false
    - meta_scope: string.quoted.double.example-c
    - match: '\.'
      scope: constant.character.escape.example-c
    - match: '"'
      scope: punctuation.definition.string.end.example-c
      pop: true

  comments:
    # Comments begin with a '//' and finish at the end of the line.
    - match: '##'
      scope: punctuation.definition.comment.example-c
      push:
        # This is an anonymous context push for brevity.
        - meta_scope: comment.line.double-slash.example-c
        - match: $\n?
          pop: true
